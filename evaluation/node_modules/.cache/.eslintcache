[{"/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/index.js":"1","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/reportWebVitals.js":"2","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/App.js":"3","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/reducers/reducers.js":"4","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/API/apis.js":"5","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/components/PageContainer.js":"6","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/actions/actions.js":"7"},{"size":821,"mtime":1613525709739,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1613525709741,"results":"10","hashOfConfig":"9"},{"size":2205,"mtime":1613525709737,"results":"11","hashOfConfig":"9"},{"size":551,"mtime":1613525709740,"results":"12","hashOfConfig":"9"},{"size":364,"mtime":1613525709736,"results":"13","hashOfConfig":"9"},{"size":1373,"mtime":1613525709738,"results":"14","hashOfConfig":"9"},{"size":169,"mtime":1613525709738,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4nqe5b",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/index.js",["33","34","35"],"/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/reportWebVitals.js",[],["36","37"],"/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/App.js",["38","39","40"],"import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport PageContainer from './components/PageContainer'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { ChangeKeyword, AddAlbums } from './actions/actions'\nimport { useHistory } from 'react-router-dom'\nimport { getTodos } from './API/apis'\n\nfunction App(props) {\n\n\n  let history = useHistory();\n  const { ChangeKW, state, Add_Albums } = props\n\n  const handleChange = (e) => {\n\n    // console.log(e.target.value, 'in handlerApp');\n    props.ChangeKW(e.target.value)\n\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // use history.push('/some/path') here\n    getTodos(state.keyword).then(res => {\n      console.log(res.results)\n      Add_Albums(res.results)\n    })\n\n\n\n    history.push(\n      {\n        pathname: '/albumlist',\n        search: '?query=' + `${state.keyword}`,  // query string\n        state: {  // location state\n          update: true,\n        },\n\n\n      })\n  }\n  console.log('state', props.state);\n\n\n  return (\n\n\n    <div className=\"App\">\n      {/* Nav */}\n      <nav className=\"nav container\">\n\n        {/* Input */}\n        <div className=\"container\" id=\"searchBar\" >\n          <form onSubmit={handleSubmit}>\n            <div className=\"ui icon input\">\n              {/* input */}\n              <input type=\"text\" placeholder=\"Search user by name...\"\n                value={state.keyword/* keyword */}\n                onChange={e => handleChange(e)}\n              />\n              {/* icon */}\n\n              <i\n                onClick={handleSubmit}\n                aria-hidden=\"true\" className=\"search circular link icon\"></i>\n            </div>\n          </form>\n        </div>\n      </nav>\n      <div>\n\n        <Switch>\n          <Route path=\"/albumlist\" render={(props) => <PageContainer {...props} />} />\n        </Switch>\n\n      </div>\n\n\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({ state: state })\nconst mapDispatchToProps = dispatch => ({\n  ChangeKW: (keyword) => dispatch(ChangeKeyword(keyword)),\n  Add_Albums: (Albums) => dispatch(AddAlbums(Albums)),\n\n\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/reducers/reducers.js",[],"/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/API/apis.js",[],"/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/components/PageContainer.js",["41"],"import React, { useEffect } from 'react'\nimport './PageContainer.css'\nimport { connect } from 'react-redux'\nimport { AddAlbums } from '../actions/actions'\nimport { getTodos } from '../API/apis'\nimport './PageContainer.css'\n\nfunction PageContainer(props) {\n    const { state, Add_Albums } = props\n\n    let currentPost = state.albums\n    useEffect(() => {\n\n\n        getTodos(state.keyword).then(res => {\n            console.log(res.results)\n            Add_Albums(res.results)\n        })\n\n    }, [])\n\n\n\n    console.log(currentPost, 'in PCOntainer');\n\n\n\n\n\n    // console.log(total,'total');\n    return (<div className=\"pagecon\">\n        <div className=\"display\">\n            <div id=\"grid\">\n                {\n                    currentPost.length ? currentPost.map((post, idx) => {\n                        return (<div className=\"item\" key={idx}>\n                            <img src={post.artworkUrl60} alt=\"\" />\n                            <h3>{post.artistName}</h3>\n                        </div>)\n                    }\n                    ) : <div>\"Not Found\"</div>\n                }\n\n            </div>\n        </div>\n\n\n\n    </div>)\n\n\n}\n\nconst mapStateToProps = state => ({ state: state })\nconst mapDispatchToProps = dispatch => ({\n    Add_Albums: (Albums) => dispatch(AddAlbums(Albums)),\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContainer);\n","/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/actions/actions.js",[],{"ruleId":"42","severity":1,"message":"43","line":7,"column":25,"nodeType":"44","messageId":"45","endLine":7,"endColumn":29},{"ruleId":"42","severity":1,"message":"46","line":7,"column":31,"nodeType":"44","messageId":"45","endLine":7,"endColumn":36},{"ruleId":"42","severity":1,"message":"47","line":9,"column":23,"nodeType":"44","messageId":"45","endLine":9,"endColumn":38},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"42","severity":1,"message":"52","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"53","line":15,"column":11,"nodeType":"44","messageId":"45","endLine":15,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":37,"column":27,"nodeType":"56","messageId":"57","endLine":37,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":20,"column":8,"nodeType":"60","endLine":20,"endColumn":10,"suggestions":"61"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'combineReducers' is defined but never used.","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'logo' is defined but never used.","'ChangeKW' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Add_Albums' and 'state.keyword'. Either include them or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [Add_Albums, state.keyword]",{"range":"67","text":"68"},[494,496],"[Add_Albums, state.keyword]"]