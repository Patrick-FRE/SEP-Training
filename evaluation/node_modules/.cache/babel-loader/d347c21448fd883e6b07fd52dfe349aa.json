{"ast":null,"code":"var _jsxFileName = \"/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/components/PageContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './PageContainer.css';\nimport { connect } from 'react-redux';\nimport { AddAlbums } from '../actions/actions';\nimport { getTodos } from '../API/apis';\nimport './PageContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageContainer(props) {\n  _s();\n\n  const {\n    state,\n    Add_Albums\n  } = props;\n  let currentPost = state.albums;\n  useEffect(() => {\n    getTodos(state.keyword).then(res => {\n      console.log(res.results);\n      Add_Albums(res.results);\n    });\n  }, []);\n  console.log(currentPost, 'in PCOntainer'); // console.log(total,'total');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagecon\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        children: currentPost.length ? currentPost.map((post, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.artworkUrl60,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.artistName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\\"Not Found\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n}\n\n_s(PageContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PageContainer;\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  Add_Albums: Albums => dispatch(AddAlbums(Albums))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"PageContainer\");","map":{"version":3,"sources":["/Users/AntraWork/FRE Training/SEP-Training/evaluation/src/components/PageContainer.js"],"names":["React","useEffect","connect","AddAlbums","getTodos","PageContainer","props","state","Add_Albums","currentPost","albums","keyword","then","res","console","log","results","length","map","post","idx","artworkUrl60","artistName","mapStateToProps","mapDispatchToProps","dispatch","Albums"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,qBAAP;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBF,KAA9B;AAEA,MAAIG,WAAW,GAAGF,KAAK,CAACG,MAAxB;AACAT,EAAAA,SAAS,CAAC,MAAM;AAGZG,IAAAA,QAAQ,CAACG,KAAK,CAACI,OAAP,CAAR,CAAwBC,IAAxB,CAA6BC,GAAG,IAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAR,MAAAA,UAAU,CAACK,GAAG,CAACG,OAAL,CAAV;AACH,KAHD;AAKH,GARQ,EAQN,EARM,CAAT;AAYAF,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ,EAAyB,eAAzB,EAhB0B,CAsB1B;;AACA,sBAAQ;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,kBAEQA,WAAW,CAACQ,MAAZ,GAAqBR,WAAW,CAACS,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAChD,8BAAQ;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACJ;AAAK,cAAA,GAAG,EAAED,IAAI,CAACE,YAAf;AAA6B,cAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADI,eAEJ;AAAA,wBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFI;AAAA,aAA2BF,GAA3B;AAAA;AAAA;AAAA;AAAA,kBAAR;AAIH,SALoB,CAArB,gBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAqBH;;GA5CQf,a;;KAAAA,a;;AA8CT,MAAMkB,eAAe,GAAGhB,KAAK,KAAK;AAAEA,EAAAA,KAAK,EAAEA;AAAT,CAAL,CAA7B;;AACA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,UAAU,EAAGkB,MAAD,IAAYD,QAAQ,CAACtB,SAAS,CAACuB,MAAD,CAAV;AADI,CAAL,CAAnC;;AAKA,eAAexB,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport './PageContainer.css'\nimport { connect } from 'react-redux'\nimport { AddAlbums } from '../actions/actions'\nimport { getTodos } from '../API/apis'\nimport './PageContainer.css'\n\nfunction PageContainer(props) {\n    const { state, Add_Albums } = props\n\n    let currentPost = state.albums\n    useEffect(() => {\n\n\n        getTodos(state.keyword).then(res => {\n            console.log(res.results)\n            Add_Albums(res.results)\n        })\n\n    }, [])\n\n\n\n    console.log(currentPost, 'in PCOntainer');\n\n\n\n\n\n    // console.log(total,'total');\n    return (<div className=\"pagecon\">\n        <div className=\"display\">\n            <div id=\"grid\">\n                {\n                    currentPost.length ? currentPost.map((post, idx) => {\n                        return (<div className=\"item\" key={idx}>\n                            <img src={post.artworkUrl60} alt=\"\" />\n                            <h3>{post.artistName}</h3>\n                        </div>)\n                    }\n                    ) : <div>\"Not Found\"</div>\n                }\n\n            </div>\n        </div>\n\n\n\n    </div>)\n\n\n}\n\nconst mapStateToProps = state => ({ state: state })\nconst mapDispatchToProps = dispatch => ({\n    Add_Albums: (Albums) => dispatch(AddAlbums(Albums)),\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContainer);\n"]},"metadata":{},"sourceType":"module"}